package com.nhutdb.drawingconsole.commands;

import java.util.Arrays;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.nhutdb.drawingconsole.models.Canvas;

public class CreateCanvasCommand implements Command {

	private Canvas canvas;	
	private final char[][]           cachedCanvasArray;
    private final String             horizontalEdge;
    private static final char HORIZONTAL_EDGE_CHAR = '-';
    private static final char VERTICAL_EDGE_CHAR   = '|';
    public CreateCanvasCommand(int w, int h){
		this.canvas.setW(w);
		this.canvas.setH(h);
		
		cachedCanvasArray = new char[h][w];
		
        Arrays.stream(cachedCanvasArray).forEach(chars -> Arrays.fill(chars, ' '));

        horizontalEdge = Stream.generate(() -> String.valueOf(HORIZONTAL_EDGE_CHAR)).limit(w + 2).collect(Collectors.joining());
	}
	public Canvas execute() {
		// TODO Auto-generated method stub
		drawCanvas();

	}
	private String drawCanvas() {
		StringBuilder builder = new StringBuilder();
        builder.append(horizontalEdge).append("\n");
        for (int i = 0; i < this.canvas.getH(); i++) {
            builder.append(VERTICAL_EDGE_CHAR);
            for (int j = 0; j < this.canvas.getW(); j++) {
                builder.append(cachedCanvasArray[i][j]);
            }
            builder.append(VERTICAL_EDGE_CHAR);
            builder.append("\n");
        }
        builder.append(horizontalEdge);
        return builder.toString();
	}

}
